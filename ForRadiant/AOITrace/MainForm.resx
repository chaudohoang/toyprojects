<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANYNAADWDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhw/wBYcP8AWHD/OVhw/7lYcP/2WHD/91hw
        /71YcP88WHD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYcP8AWHD/AFhw/z5YcP/WWHD//1hw
        //9YcP//WHD//1hw/9ZYcP86AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWHD/AFhw/wBYcP8/WHD/2Vhw
        //9YcP//WHD//1hw//9YcP//WHD//1hw/7MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFhw/wBYcP8AWHD/P1hw
        /9lYcP//WHD//1hw//9YcP//WHD//1hw//9YcP//WHD/7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYcP8AWHD/AFhw
        /z9YcP/ZWHD//1hw//9YcP//WHD//1hw//9YcP//WHD//1hw//9YcP/nAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGtZQABrWUAAa1lAA2tZQBNrWUAoa1lANmtZQDhrWUAsa1lAGWtZQAZrWUAAa1lAAFhw
        /wBYcP8XWHD/zFhw//9YcP//WHD//1hw//9YcP//WHD//1hw//9YcP//WHD//1hw/6IAAAAAAAAAAAAA
        AAAAAAAAAAAAAGtZQABrWUAAa1lAF2tZQFlrWUCha1lA0GtZQOhrWUDxa1lA8mtZQOtrWUDYa1lAsGtZ
        QG5rWUAmc08AAVhz/whYcPuQWHD9/Vhw//9YcP//WHD//1hw//9YcP//WHD//1hw//9YcP/FWHD/KAAA
        AAAAAAAAAAAAAGtZQABrWUAAa1lADWtZQGVrWUDOa1lA+2tZQP9qWD//aVc9/2lWPf9pVj3/aVY9/2pX
        Pv9rWUD/a1lA/mtZQOFrWUCGalY2IV1NRXpbYKj8WHD7/1hw//9YcP//WHD//1hw//9YcP//WHD/yVhw
        /y1YcP8AAAAAAAAAAABrWUAAa1lAAGtZQCNrWUCpa1lA+WtZQP9pVz7/bVxD/31tWP+Qg3H/nJGB/56T
        g/+ViHf/g3Rg/3FgSP9pVz7/alg//2tZQP1qWD/dYk418l5LPP9bX6b/WHD8/1hw//9YcP//WHD//1hw
        /8lYcP8tWHD/AFhw/wAAAAAAa1lAAGtZQABrWUAra1lAxWtZQP9qWD7/b11F/5OGdf/Evrf/4uHf/+7t
        7P/x8O3/8vDs//Dv7f/n5ub/0MzH/6OYiv92ZU7/aVc+/2tZQP9qWD//Yk82/15LPP9bYKr3WHD/+lhw
        //9YcP/JWHD/LVhw/wBYcP8AAAAAAGtZQABrWUAAa1lAHWtZQMBrWUD/alc+/3xsVv+/uK//7ezs//Pu
        3//w37T/7tOQ/+3Of//tzXz/7dGI/+/apv/y6dL/8fDu/9LPyv+NgG3/alg//2tZQP9qWD//Yk417l1O
        SGlYcP+NWHD/vVhw/y5YcP8AWHD/AAAAAAAAAAAAa1lAAGtZQAdrWUCZa1lA/2pXPv+Bcl3/08/K//Px
        6//v26r/7Mdp/+vAVP/rv1H/679S/+vAUv/rv1H/679S/+vDXv/u047/8+zb/+Xj4v+YjHv/alg//2tZ
        QP9qWD/dalc9JlJ5/wZYcP8QWHD/AFhw/wAAAAAAAAAAAAAAAABrWUAAa1lATWtZQPNqWD//eWlS/9DM
        xv/z8Of/7tKM/+vAVf/rwFP/7cFU/+vAVP/nvVP/5rxT/+q/VP/twlT/68BT/+u/Uv/syG3/8ufM/+Xk
        4v+PgW//alc+/2tZQP9rWUCPa1lAAmtZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAGtZQAtrWUCya1lA/2xa
        Qf+2rqP/8/Lu/+7Tkf/rwFP/7MBU/+q/VP/Np0//o4ZJ/410Rf+KckX/mX5H/72bTf/kulP/7MFU/+u/
        Uv/syG3/8+zZ/9TRzf93Z1D/alg//2tZQOZrWUAva1lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa1lAQWtZ
        QO1pVz7/h3ll/+fm5v/w4Lj/68FX/+vAVP/nvVP/rI1K/3RgQf9pV0D/aVdA/2lYQP9pV0D/bVtA/5R6
        Rv/bs1H/7MFU/+u/Uv/u0Yv/8vHt/6edj/9qVz7/a1lA/2tZQHprWUAAa1lAAAAAAAAAAAAAAAAAAAAA
        AABrWUCIa1lA/2pYP/+zqp//8/Hq/+3Ld//rv1L/68BU/7GSS/9tWkD/alhA/2tZQP9rWUD/a1lA/2tZ
        QP9rWUD/aVdA/5J5Rv/julP/7MBT/+vDXP/y583/1NDM/3NiS/9qWD//a1lAu2tZQAprWUAAAAAAAAAA
        AAAAAAAAAAAAAGtZQMFrWT//cmFJ/9PQzP/y58z/68Ja/+zBVP/YsVH/e2ZD/2pYQP9rWUD/a1lA/2tZ
        QP9rWUD/a1lA/2tZQP9rWUD/bFpA/7qZTP/twVT/679S/+/Yn//q6en/iHlm/2lXPv9rWUDha1lAIWtZ
        QAAAAAAAAAAAAAAAAAAAAAAAa1lA4mpYPv99blj/4+Lh//Ddrv/rwFP/7cJU/7uZTP9rWUD/a1lA/2tZ
        QP9rWUD/a1lA/2tZQP9rWUD/a1lA/2tZQP9pV0D/lHpG/+m+VP/rv1H/7c6B//Hw7f+bj3//aVY9/2tZ
        QPFrWUA3a1lAAAAAAAAAAAAAAAAAAAAAAABrWUDwaVc+/4R2Yf/p6Oj/79ig/+u/Uv/twVT/q4xK/2lY
        QP9rWUD/a1lA/2tZP/9rWUD/a1lA/2tZQP9rWUD/a1lA/2lYQP+FbkT/5LpT/+vAUv/ty3b/8/Hr/6Wb
        jf9pVj3/a1lA92tZQERrWUAAAAAAAAAAAAAAAAAAAAAAAGtZQO9pVz7/hHVh/+jo5//v2aL/679S/+3C
        VP+uj0v/aVhA/2pYP/9pVz3/c2JK/7qypv+vpZj/b11F/2tZQP9rWUD/aVhA/4hwRf/lu1P/68BS/+3L
        eP/z8ez/pJqM/2lWPf9rWUD3a1lAQmtZQAAAAAAAAAAAAAAAAAAAAAAAa1lA32pYP/97bFb/4eDf//Df
        tP/rwFT/7cJU/8WhTv9tW0D/cmJK/4JzXv+LfWn/8e/s/+Tg3P92Zk//alg//2tZQP9pV0D/n4JI/+vA
        VP/rv1H/7dCI//Dw7v+YjHz/aVY9/2tZQO9rWUAza1lAAAAAAAAAAAAAAAAAAAAAAABrWUC6a1lA/3Bf
        R//Py8X/8+rU/+vDX//swFP/4bhS/5R+U//Mxr7/9PPx/9TOx/+kmYn/joFu/2xaQf9rWUD/alhA/3Jf
        Qf/KpU//7cFU/+vAU//w3Kv/6Ofm/4R1Yf9pVz7/a1lA22tZQBtrWUAAAAAAAAAAAAAAAAAAAAAAAGtZ
        QH5rWUD+alc+/6uilf/z8u7/7c+E/+u/Uf/rv1H/4sZ///v6+f///////Pv7/5WId/9nVDv/a1lA/2pY
        QP9tW0D/q4xK/+m/VP/rwFP/7MVk//Ps2f/OycP/cF9H/2tZQP9rWUCva1lABmtZQAAAAAAAAAAAAAAA
        AAAAAAAAa1lAN2tZQOhqWD7/gHFc/+Lg3v/x5sn/68Ne/+u/Uf/vym///Pbm///////t6uf/hHZi/2hW
        Pv9sWUD/fGdD/7OTS//nvVP/7MBU/+vAU//v2J//8PDv/52Sgv9pVz7/a1lA/mtZQGlrWUAAa1lAAAAA
        AAAAAAAAAAAAAAAAAABrWUAHa1lApWtZQP9rWD//qqCT//Hx8P/v26j/68FX/+vAU//vzXj/9d2g/9y/
        eP+uj0v/q4xK/7yaTf/ZslH/68BU/+vAVP/rv1L/7c6A//Pw5//Kxb7/cmFK/2pYP/9rWUDZa1lAIWtZ
        QAAAAAAAAAAAAAAAAAAAAAAAAAAAAGtZQABrWUA/a1lA62pYP/9yYUr/w7y0//Py8P/v26j/68Nd/+u+
        UP/rv1H/7MBS/+3BVP/twVT/7cJU/+zBVP/rv1L/68BU/+3Pg//z7eD/3NnW/4N1YP9qVz7/a1lA/WtZ
        QHdrWUAAa1lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa1lAAGtZQANrWUCDa1lA/WpYP/93Z1D/w721//Lx
        8f/x5cf/7c6B/+vDXP/rv1P/679R/+u/Uf/rv1L/68FW/+zIbf/v26n/8/Hp/9rX0/+KfGj/alc+/2tZ
        QP9rWUC7a1lAFWtZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa1lAAGtZQBFrWUCoa1lA/2pY
        Pv9zYkr/rKOW/+Ti4f/z8u3/8ujP//DdrP/u1pj/7tWU/+/Zov/x48D/8+/j/+zs6//Bu7P/gHBb/2pX
        Pv9rWUD/a1lA1WtZQDJrWUAAa1lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABrWUAAa1lAAGtZ
        QBlrWUCpa1lA/WpYP/9rWUD/g3Rf/7Cnm//U0Mz/5eTj/+zr6//s7Ov/6Ofn/9vY1v+9tq3/kINx/29d
        Rf9qVz7/a1lA/2tZQNJrWUA8a1lAAGtZQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABrWUAAa1lAAGtZQBJrWUCFa1lA7WtZQP9qVz7/alg//3JhSv9/cFv/iXto/4t9av+DdWD/dmZP/2xa
        Qf9pVz7/a1lA/2tZQPlrWUCva1lAK2tZQABrWUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAa1lAAGtZQARrWUBBa1lAqmtZQOxrWUD+a1k//2pXPv9pVz7/aVc9/2lX
        Pv9qWD//a1lA/2tZQPVrWUDFa1lAYWtZQA5rWUAAa1lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa1lAAGtZQABrWUAJa1lAPWtZQIlrWUDGa1lA6mtZ
        QPprWUD8a1lA8WtZQNRrWUCea1lAVGtZQBRrWUAAa1lAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////gf///wD///4A///8AP//+AD/gHAA/gAAAPgAAAHwAAAD4AAAB8AA
        AA+AAAAfgAAAPwAAAD8AAAA/AAAAHwAAAB8AAAAfAAAAHwAAAB8AAAAfAAAAHwAAAB8AAAA/AAAAP4AA
        AH+AAAB/wAAA/+AAAf/wAAP/+AAH//4AH/8=
</value>
  </data>
</root>